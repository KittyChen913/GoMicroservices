version: '3.9'

services:
  # API Service
  broker-service:
    build:
      context: ./broker-service
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - PORT=8080
      - AuthApiUrl=http://authentication-service:8080/Authentication
    volumes:
      - ./broker-service:/app

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: ./Dockerfile
    ports:
      - "8081:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - PORT=8080
      - postgresDB=postgresql://postgres:password@postgres-db/users
      - LoggerApiUrl=http://logger-service:8080/WriteLog
    volumes:
      - ./authentication-service:/app
    depends_on:
      - postgres-db

  logger-service:
    build:
      context: ./logger-service
      dockerfile: ./Dockerfile
    ports:
      - "8082:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - PORT=8080
      - mongoDB=mongodb://mongo:password@mongo-db:27017
    volumes:
      - ./logger-service:/app
    depends_on:
      - mongo-db

  # DB
  postgres-db:
    image: 'postgres:14.2'
    ports:
      - "5435:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo-db:
    image: mongo:8.0.10
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db